{"ast":null,"code":"var _jsxFileName = \"E:\\\\Unit_5\\\\Coding\\\\Sprint_4\\\\coding\\\\New folder\\\\my-app\\\\src\\\\components\\\\NewOrder.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewOrder = () => {\n  // Get data of only this user. store it in redux\n  // GET /orders?owner_name=john will give you all order of user john\n  //  on submit click create a new order, new order has status `Not Accepted`\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-problem\",\n        type: \"text\",\n        name: \"problem\",\n        placeholder: \"Enter problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"owner-name\",\n        type: \"text\",\n        name: \"owner_name\",\n        placeholder: \"yourname\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"brand\",\n        type: \"text\",\n        name: \"brand\",\n        placeholder: \"Enter brand name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pastOrders\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"past-orders\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \". \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"problem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 41\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"status\",\n          children: \"Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = NewOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewOrder\");","map":{"version":3,"names":["NewOrder"],"sources":["E:/Unit_5/Coding/Sprint_4/coding/New folder/my-app/src/components/NewOrder.jsx"],"sourcesContent":["export const NewOrder = () => {\n  // Get data of only this user. store it in redux\n  // GET /orders?owner_name=john will give you all order of user john\n  //  on submit click create a new order, new order has status `Not Accepted`\n  return (\n    <div>\n      <div className=\"form\">\n        <input\n          className=\"new-problem\"\n          type=\"text\"\n          name=\"problem\"\n          placeholder=\"Enter problem\"\n        />\n        {/* This input is readonly, it's coming from redux */}\n        <input\n          className=\"owner-name\"\n          type=\"text\"\n          name=\"owner_name\"\n          placeholder=\"yourname\"\n          readOnly\n        />\n        <input\n          className=\"brand\"\n          type=\"text\"\n          name=\"brand\"\n          placeholder=\"Enter brand name\"\n        />\n        {/* Create new problem, show it in below form immediately */}\n        <button className=\"submit\">submit</button>\n      </div>\n\n      <div className=\"pastOrders\">\n        {/* this button filters the data below. */}\n        {/* it's just a toggle of redux state something like `showUnfinished`  */}\n        <button className=\"filter\">\n          {/* Text should change like:   Show {showUnfinished ? \"all\" : \"Only unfinished\"} */}\n        </button>\n\n        {/* Here create a div for every oreder, filter them before based on `showUnfinished` */}\n        <div className=\"past-orders\">\n          <span className=\"id\"></span>. <span className=\"problem\"></span>{\" \"}\n          <span className=\"cost\">\n            {/* if status is not accepted then keep it empty otherwise show cost like $1234 */}\n          </span>\n          <p className=\"status\">Status: </p>\n          <hr />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAM;EAC5B;EACA;EACA;EACA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QACE,SAAS,EAAC,aADZ;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,SAHP;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QACE,SAAS,EAAC,YADZ;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,YAHP;QAIE,WAAW,EAAC,UAJd;QAKE,QAAQ;MALV;QAAA;QAAA;QAAA;MAAA,QARF,eAeE;QACE,SAAS,EAAC,OADZ;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,OAHP;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QAfF,eAsBE;QAAQ,SAAS,EAAC,QAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eA0BE;MAAK,SAAS,EAAC,YAAf;MAAA,wBAGE;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAHF,eAQE;QAAK,SAAS,EAAC,aAAf;QAAA,wBACE;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QADF,qBACgC;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QADhC,EACkE,GADlE,eAEE;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UAAG,SAAS,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8CD,CAlDM;KAAMA,Q"},"metadata":{},"sourceType":"module"}